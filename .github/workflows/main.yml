name: Salsa build & release
on:
  push:
    paths-ignore:
      - '**.md'
      - 'CODEOWNERS'
      - 'LICENSE'
      - '.gitignore'
      - 'doc/**'
      - 'Makefile'
env:
  VERSION: v0.7
  IMAGE_NAME: ghcr.io/${{ github.repository }}
  COSIGN_VERSION: v1.13.1
  SYFT_VERSION: v0.44.1
  GO_RELEASER_VERSION: v1.11.2
  GRADLE_VERSION: 7.5.1
  PUSH: false
jobs:
  set-version:
    runs-on: ubuntu-20.04
    outputs:
      version: ${{ steps.set-version.outputs.version }}
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # ratchet:actions/checkout@v3
      - name: set version
        id: set-version
        run: |
          echo Faking a Semantic Version
          echo "version=${{ env.VERSION }}.$(date "+%Y%m%d%H%M%S")" >> $GITHUB_OUTPUT
  test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # ratchet:actions/checkout@v3
      - uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # ratchet:actions/setup-go@v3
        with:
          go-version-file: ./go.mod
          check-latest: true
          cache: true
      - name: Test Salsa
        run: make test
  build:
    outputs:
      cli-tag: ${{ steps.container-tags.outputs.cli-tag }}
      action-tag: ${{ steps.container-tags.outputs.action-tag }}
    needs:
      - set-version
      - test
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout latest code
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # ratchet:actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # ratchet:actions/setup-go@v3
        with:
          go-version-file: ./go.mod
          check-latest: true
          cache: true
      - name: Create tag
        run: |
          git tag ${{ needs.set-version.outputs.version }}
      #      - uses: navikt/github-app-token-generator@v1
      #        id: get-homebrew-token
      #        with:
      #          private-key: ${{ secrets.NAIS_APP_PRIVATE_KEY }}
      #          app-id: ${{ secrets.NAIS_APP_ID }}
      #          repo: nais/homebrew-tap
      - name: Install cosign
        uses: sigstore/cosign-installer@f3c664df7af409cb4873aa5068053ba9d61a57b6 # ratchet:sigstore/cosign-installer@v2.6.0
        with:
          cosign-release: ${{ env.COSIGN_VERSION }}
      - name: Install Syft
        uses: anchore/sbom-action/download-syft@06e109483e6aa305a2b2395eabae554e51530e1d # ratchet:anchore/sbom-action/download-syft@v0.13.1
        with:
          syft-version: ${{ env.SYFT_VERSION }}
      - name: Put key on file
        run: |
          echo '${{ secrets.COSIGN_PRIVATE_KEY }}' > cosign.key
      - name: Run GoReleaser
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: goreleaser/goreleaser-action@f82d6c1c344bcacabba2c841718984797f664a6b # ratchet:goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          version: ${{ env.GO_RELEASER_VERSION }}
          args: release -f .goreleaser.yml --rm-dist --debug
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUSH_TOKEN: ${{ steps.get-homebrew-token.outputs.token }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@15c905b16b06416d2086efa066dd8e3a35cc7f98 # ratchet:docker/setup-buildx-action@v2
        with:
          provenance: false
      - name: Login to Docker
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # ratchet:docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create tags
        id: container-tags
        run: |
          echo "cli-tag=${{ env.IMAGE_NAME }}:${{ needs.set-version.outputs.version }}" >> $GITHUB_OUTPUT
          echo "action-tag=${{ env.IMAGE_NAME }}:${{ env.VERSION }}" >> $GITHUB_OUTPUT
      - name: Only push from main
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          echo "PUSH=true" >> $GITHUB_ENV
      - name: Build and push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # ratchet:docker/build-push-action@v4
        with:
          push: ${{ env.PUSH }}
          tags: ${{ steps.container-tags.outputs.cli-tag }},${{ steps.container-tags.outputs.action-tag }}
          labels: version=${{ needs.set-version.outputs.version }},revision=${{ github.sha }}
          build-args: |
            COSIGN_VERSION=${{ env.COSIGN_VERSION }}
            GRADLE_VERSION=${{ env.GRADLE_VERSION }}
      - name: Update major/minor version tag
        if: ${{ github.ref == 'refs/heads/main' }}
        run: "git tag -f ${{ env.VERSION }}\ngit push -f origin ${{ env.VERSION }} \n"
      - name: Clean up
        if: ${{ always() }}
        run: "rm -f cosign.key \n"
  sign-attest:
    needs:
      - build
    runs-on: ubuntu-20.04
    if: ${{ github.ref == 'refs/heads/main' }}
    env:
      CLI_IMAGE_TAG: "${{ needs.build.outputs.cli-tag }}"
      ACTION_IMAGE_TAG: "${{ needs.build.outputs.action-tag }}"
    steps:
      - name: Install cosign
        uses: sigstore/cosign-installer@b3413d484cc23cf8778c3d2aa361568d4eb54679 # ratchet:sigstore/cosign-installer@v2.5.1
        with:
          cosign-release: ${{ env.COSIGN_VERSION }}
      - name: Install Syft
        uses: anchore/sbom-action/download-syft@06e109483e6aa305a2b2395eabae554e51530e1d # ratchet:anchore/sbom-action/download-syft@v0.13.1
        with:
          syft-version: ${{ env.SYFT_VERSION }}
      - name: Login to Docker
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # ratchet:docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Sign Docker image
        run: |
          echo '${{ secrets.COSIGN_PRIVATE_KEY }}' > cosign.key
          cosign sign --key cosign.key ${{ env.CLI_IMAGE_TAG }}
          cosign sign --key cosign.key ${{ env.ACTION_IMAGE_TAG }}
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
      - name: Verify and attach attestation
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        run: |
          echo '${{ secrets.COSIGN_PUBLIC_KEY }}' > cosign.pub
          cosign verify --key cosign.pub ${{ env.CLI_IMAGE_TAG }}

          syft attest -o spdx-json ${{ env.CLI_IMAGE_TAG }} > sbom-cli.json
          cosign attach attestation --attestation sbom-cli.json ${{ env.CLI_IMAGE_TAG }}
          cosign verify-attestation --type spdxjson --key cosign.pub ${{ env.CLI_IMAGE_TAG }} > cosignverify-cli.json

          cosign verify --key cosign.pub ${{ env.ACTION_IMAGE_TAG }}
          syft attest -o spdx-json ${{ env.ACTION_IMAGE_TAG }} > sbom-action.json
          cosign attach attestation --attestation sbom-action.json ${{ env.ACTION_IMAGE_TAG }}
          cosign verify-attestation --type spdxjson --key cosign.pub ${{ env.ACTION_IMAGE_TAG }} > cosignverify-action.json
      - name: Upload provenance
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # ratchet:actions/upload-artifact@v3
        with:
          path: |
            ./sbom-cli.json
            ./sbom-action.json
            ./cosignverify-cli.json
            ./cosignverify-action.json
      - name: Clean up
        if: ${{ always() }}
        run: |
          rm -f cosign.key
